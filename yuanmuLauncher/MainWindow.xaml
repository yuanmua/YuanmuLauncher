<Controls:MetroWindow x:Class="yuanmu.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:yuanmu" 
        Icon="/favicon.ico"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        mc:Ignorable="d"  

        NonActiveGlowBrush="{DynamicResource TitleBarBackgroundBrush}"
        NonActiveWindowTitleBrush="{DynamicResource TitleBarForegroundBrush}"
        WindowTitleBrush="{DynamicResource TitleBarForegroundBrush}"

        Style="{StaticResource MetroWindow}"
        WindowStartupLocation="CenterScreen"
        Title="yuanmu"
        Height="600" Width="1000"
        MinHeight="400" MinWidth="600"
        UseLayoutRounding="True"
        WindowStyle="None"
        GlowBrush="{DynamicResource AccentColorBrush}"
        ResizeMode="CanResizeWithGrip"
        ShowTitleBar="True"
        ShowIconOnTitleBar="False"
        ShowMaxRestoreButton="False"
        ShowMinButton="True"
        x:Name="MetroWindow"
        Closing="MetroWindow_Closing" 
        StateChanged="MetroWindow_StateChanged"
        Loaded="MetroWindow_Loaded">
                      


    <Controls:MetroWindow.Resources>
        
        <!-- 定义现代化配色
        <SolidColorBrush x:Key="AccentColorBrush" Color="#0078D7" /> -->
        <!-- 现代蓝 -->
        <!-- 标题 -->
        <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#0078D7" />
        <SolidColorBrush x:Key="TitleBarForegroundBrush" Color="#3C3C3C" />
        
        <!-- 淡灰背景 
        <SolidColorBrush x:Key="MaterialDesignPaper" Color="#3C3C3C" /> -->
        <!-- 选中项背景色  -->
        <SolidColorBrush x:Key="MaterialDesignSelection" Color="#3C3C3C" />

        <SolidColorBrush x:Key="MaterialDesignSelection11" Color="#4A6C8F" />


        <SolidColorBrush x:Key="MaterialDesignButton" Color="#6B8E6E" />
        
        <!-- 分割线颜色 -->
        <SolidColorBrush x:Key="MaterialDesignDivider" Color="#909090" />
        
        
        <!-- 选中项背景色 -->
        <!-- 选中项背景色 -->
        <!-- 修改原有的静态颜色定义为动态资源 -->
        <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource AccentColor}"/>
        <SolidColorBrush x:Key="MaterialDesignPaper" Color="{DynamicResource BackgroundColor}"/>

        <!-- 添加颜色配置项 -->
        <Color x:Key="AccentColor">#0078D7</Color>
        <Color x:Key="BackgroundColor">#3C3C3C</Color>

        <!-- 优化后的窗口命令按钮样式 -->
        <Style x:Key="WindowCommandButton" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <materialDesign:PackIcon 
                                    Kind="{TemplateBinding Tag}"
                                    Width="18"
                                    Height="18"
                                    Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 优化数据网格样式 -->
        <Style x:Key="ModernDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
            <Setter Property="RowHeight" Value="45"/>
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource MaterialDesignDivider}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        </Style>

        <!-- 优化菜单项样式 
        <Style x:Key="ModernMenuItem" TargetType="MenuItem">
            <Setter Property="Padding" Value="12 8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Icon">
                <Setter.Value>
                    <DataTemplate>
                        <Image Source="{Binding FileIcon}" 
                                   Width="24" 
                                   Height="24"
                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        -->
        <Style xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" x:Key="ButtonWindowCommandsDropDownStyle" TargetType="Button" >
            <Style.Resources>
                <!-- override the dynamic resources -->
                <SolidColorBrush x:Key="GrayBrush8" options:Freeze="True" Color="Transparent" />
                <SolidColorBrush x:Key="GrayBrush5" options:Freeze="True" Color="Transparent" />
                <!-- for IsEnabled == False -->
                <SolidColorBrush x:Key="GrayBrush10" options:Freeze="True" Color="Transparent" />
            </Style.Resources>
        </Style>

        <Style x:Key="DropDownButtonWindowCommandsStyle" TargetType="controls:DropDownButton" BasedOn="{StaticResource {x:Type controls:DropDownButton}}">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="ArrowVisibility" Value="Collapsed" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ButtonStyle" Value="{DynamicResource ButtonWindowCommandsDropDownStyle}" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ContextMenu x:Key="CellContextMenu">
            <MenuItem Header="删除(_D)" Click="MIDel_Click" />
        </ContextMenu>

        <Style x:Key="MaterialDesignDataGridCellModify" TargetType="{x:Type DataGridCell}">
            <Setter Property="ContextMenu" Value="{StaticResource CellContextMenu}"/>
            <Setter Property="Padding" Value="8" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border 
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection11}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value=".56"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FileMenuItems" TargetType="{x:Type MenuItem}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <MenuItem Click="MenuItem_Click">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image RenderOptions.BitmapScalingMode="HighQuality"  Width="20" Height="20" Source="{Binding FileIcon}" />
                                    <ContentPresenter Margin="5,0" Content="{Binding FileName}" />
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GroupMenuItems"  TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <MenuItem Header="{Binding GroupName}" 
                                  ItemsSource="{Binding ListShortcutInfo}"
                                  ItemContainerStyle="{StaticResource FileMenuItems}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Controls:MetroWindow.Resources>

    <!-- 窗口标题栏 -->
    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Grid>
                <!-- <TextBlock Text="{Binding}" 
                           VerticalAlignment="Center"
                           FontSize="18" 
                           FontWeight="Bold"
                           FontFamily="{StaticResource MaterialDesignFont}"
                            Foreground="{DynamicResource AccentColorBrush}"/>
                    -->
                <TextBlock Text="原木启动器" 
                       VerticalAlignment="Center"
                       Margin="20 0"
                       FontSize="18"
                       FontWeight="SemiBold"
                       Foreground="{DynamicResource AccentColorBrush}"/>
            </Grid> 
                    
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>
    
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands ShowSeparators="False">
            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" x:Name="tog_HideStatusBar" ToolTip="固定状态栏显示" IsChecked="{Binding MinInTaskbar}">
                <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                    <materialDesign:PackIcon.RenderTransform>
                        <RotateTransform Angle="45" />
                    </materialDesign:PackIcon.RenderTransform>
                </materialDesign:PackIcon>
                <materialDesign:ToggleButtonAssist.OnContent>
                    <materialDesign:PackIcon Kind="Pin" />
                </materialDesign:ToggleButtonAssist.OnContent>
            </ToggleButton>
            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" x:Name="tog_Topmost" ToolTip="置顶" IsChecked="{Binding Topmost,ElementName=MetroWindow,Mode=OneWayToSource}">
                <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                    <materialDesign:PackIcon.RenderTransform>
                        <RotateTransform Angle="45" />
                    </materialDesign:PackIcon.RenderTransform>
                </materialDesign:PackIcon>
                <materialDesign:ToggleButtonAssist.OnContent>
                    <materialDesign:PackIcon Kind="Pin" />
                </materialDesign:ToggleButtonAssist.OnContent>
            </ToggleButton>
            <Button Style="{StaticResource WindowCommandButton}" 
                Click="BtnSettings_Click"
                ToolTip="设置">
                <materialDesign:PackIcon Kind="Cog" />
            </Button>
            <!--<Button Click="BtnSave_Click" ToolTip="保存">
                <materialDesign:PackIcon Kind="ContentSaveSettings" />
            </Button>-->
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <!-- 主内容布局 -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon 
            x:Name="MyNotifyIcon" 
            IconSource="/favicon.ico" 
            TrayMouseDoubleClick="MyNotifyIcon_TrayMouseDoubleClick" >
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <!-- 动态分组菜单 -->
                    <MenuItem Header="我的分组" 
                    ItemsSource="{Binding Groups}"
                    ItemContainerStyle="{StaticResource GroupMenuItems}"/>

                    <!-- 静态菜单项 -->
                    <Separator />
                    
                    <MenuItem Header="打开" Click="MenuItem_Open_Click">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Application" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="退出" Click="MenuItem_Exit_Click">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Power" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <!-- 标题栏 
        <Grid Grid.Row="0" Height="40">
            <TextBlock Text="原木启动器" 
                       VerticalAlignment="Center"
                       Margin="20 0"
                       FontSize="18"
                       FontWeight="SemiBold"
                       Foreground="{DynamicResource AccentColorBrush}"/>
        </Grid>-->

        <!-- 主体内容 -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="240"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- 分组列表 -->
            <Border Grid.Column="0" 
                    Background="{DynamicResource MaterialDesignPaper}"
                    CornerRadius="4"
                     AllowDrop="True"
                           PreviewKeyDown="DataGrid_PreviewKeyDown"
       PreviewMouseLeftButtonDown="dg_Groups_PreviewMouseLeftButtonDown"
       MouseMove="dg_Groups_MouseMove"
       Drop="dg_Groups_Drop"
                    Margin="10">
                <Grid>
                    <ScrollViewer x:Name="scv" VerticalScrollBarVisibility="Auto" 
                                  Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}},Path=ActualHeight}" 
                                  PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" 
                                  >
                        <StackPanel CanVerticallyScroll="True">
                            <DataGrid x:Name="dg_Groups" 
                                      HeadersVisibility="None" 
                                      SelectionMode="Single"
                                      CellStyle="{StaticResource MaterialDesignDataGridCellModify}" 
                                      SelectionChanged="DataGrid_SelectionChanged"
                      RowHeight="43.51" 
                                      ItemsSource="{Binding Groups}" 
                                      RowHeaderWidth="0" VerticalAlignment="Top"
                      AutoGenerateColumns="False"
                                      CanUserAddRows="False" 
                                      CanUserResizeRows="False" CanUserReorderColumns="False" CanUserSortColumns="False"
                      PreparingCellForEdit="DataGrid_PreparingCellForEdit" CellEditEnding="DataGrid_CellEditEnding" PreviewKeyDown="DataGrid_PreviewKeyDown">
                                <DataGrid.Columns>
                                    <!-- ... 其他代码保持不变 ... -->
                                    <DataGridTemplateColumn Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding GroupName}" 
                           VerticalAlignment="Center"
                           Padding="8"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding GroupName, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                         VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                        </StackPanel>
                    </ScrollViewer>


                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            
                            Background="{DynamicResource MaterialDesignButton}"
                            BorderBrush="{DynamicResource MaterialDesignButton}"
                            Click="BtnAddGroup_Click"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            Margin="16">
                        <materialDesign:PackIcon Kind="Add" />
                    </Button>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="1" 
                          Width="2"
                          Background="{DynamicResource MaterialDesignDivider}"
                          ResizeBehavior="PreviousAndNext"/>

            
            <!-- 文件列表 -->
            <local:FileListView x:Name="FileView"
                                Grid.Column="2"
                                Margin="10"/>
        </Grid>
    </Grid>
</Controls:MetroWindow>
